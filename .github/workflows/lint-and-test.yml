name: Python package

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    permissions:
      checks: write
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: |
          poetry install
      - uses: chartboost/ruff-action@v1
        with:
          args: --fix -e
      - uses: reviewdog/action-suggester@v1
        with:
          tool_name: ruff
      - uses: tsuyoshicho/action-mypy@v3
        with:
          level: warning
          setup_command: poetry add mypy
          execute_command: poetry run mypy

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        PYTHON_VERSION: ['3.11']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.PYTHON_VERSION}}
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project false
      - name: Set up cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
      - name: Install dependencies
        run: |
          poetry install
      - name: set pythonpath
        run: |
          echo "PYTHONPATH=src" >> $GITHUB_ENV
      - name: Initialize database
        run: |
          poetry run airflow db init
      - name: Run tests with pytest
        run: |
          poetry run pytest tests/ --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
